---
import Icon from "astro-icon";
import { Post, RawPost } from "../../../entities/Post";
import { Author } from "../../../entities/Author";
import { Category } from "../../../entities/Category";
import { Tag } from "../../../entities/Tag";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import Picture from "../../../components/Picture.astro";
import PostMeta from "../../../components/PostMeta.astro";
import YouTube from "../../../components/YouTube.astro";
import { enhancePosts } from "../../../utils/content";

export async function getStaticPaths() {
  const allPosts = await Astro.glob<RawPost>("../../../../content/posts/*.md");
  const allAuthors = await Astro.glob<Author>("../../../../content/authors/*.md");
  const allCategories = await Astro.glob<Category>("../../../../content/categories/*.md");

  const allTags = await Astro.glob<Tag>("../../../../content/tags/*.md");

  const posts = enhancePosts(allPosts, allAuthors, allCategories, allTags);
  posts.sort((a, b) => Date.parse(b.frontmatter.date) - Date.parse(a.frontmatter.date));

  const postRegExp = new RegExp("/([0-9]{4})/([0-9]{2})/(.+)");

  rss({
    title: import.meta.env.SITE_NAME,
    description: import.meta.env.SITE_DESCRIPTION,
    customData: `
      <language>${import.meta.env.SITE_LANGUAGE}</language>
      <image>
        <url>${Astro.site}/favicon-32x32.png</url>
        <title>${import.meta.env.SITE_NAME}</title>
        <link>${Astro.site}</link>
        <width>32</width>
        <height>32</height>
      </image>
    `,
    items: posts.map((post) => ({
      title: post.frontmatter.title,
      description: post.frontmatter.excerpt,
      link: `${Astro.site}${post.frontmatter.permalink}`,
      pubDate: post.frontmatter.date,
      customData: [
        `<dc:creator>${post.frontmatter.author.frontmatter.title}</dc:creator>`,
        ...post.frontmatter.categories.map((category) => `<category>${category.frontmatter.title}</category>`),
      ].join(""),
    })),
  });

  return posts.map((post, index, list) => {
    const [_, year, month, slug] = postRegExp.exec(post.frontmatter.permalink);
    return {
      params: { year, month, slug },
      props: {
        post,
        prev: list[index + 1],
        next: list[index - 1],
      },
    };
  });
}

const { post } = Astro.props;
const { Content } = post;
const { title, language, featured_image, excerpt, opening, tags } = Astro.props.post.frontmatter as Post;

const next = Astro.props.next?.frontmatter as Post;
const prev = Astro.props.prev?.frontmatter as Post;
---

<BaseLayout title={title} description={excerpt} {language} previewImage={featured_image}>
  <h1>{title}</h1>
  <PostMeta post={post} />
  <section class="featured-media-wrapper">
    {
      post.frontmatter.featured_youtube ? (
        <YouTube id={post.frontmatter.featured_youtube} title={`Video ${post.frontmatter.title}`} />
      ) : (
        <a href={post.frontmatter.permalink}>
          <Picture
            src={post.frontmatter.featured_image}
            alt=""
            imgSrcSets={[
              {
                query: "(max-width: 600px)",
                width: 600,
                height: (600 / 16) * 9,
              },
              {
                query: "(min-width: 600.05px)",
                width: 980,
                height: (980 / 3) * 2,
              },
            ]}
          />
        </a>
      )
    }
  </section>
  {opening && <Markdown>{opening}</Markdown>}
  <Content />
  {
    tags?.length > 0 && (
      <section class="tags">
        <h2>Tags</h2>
        <ul>
          {tags.map((tag) => (
            <li>
              <a href={`/tag/${tag.frontmatter.slug}`}>{tag.frontmatter.title}</a>
            </li>
          ))}
        </ul>
      </section>
    )
  }
  <section class="next-prev-wrapper">
    {
      prev && (
        <a class="prev" href={prev.permalink}>
          <Icon name="ic:chevron-left" />
          <article>
            <div class="description">Articolo precedente</div>
            <div class="title">{prev.title}</div>
          </article>
        </a>
      )
    }
    <span class="spacer"></span>
    {
      next && (
        <a class="next" href={next.permalink}>
          <Icon name="ic:chevron-right" />
          <article>
            <div class="description">Articolo successivo</div>
            <div class="title">{next.title}</div>
          </article>
        </a>
      )
    }
  </section>
</BaseLayout>

<style>
  section {
    margin: var(--space-xl) 0;
  }

  .featured-media-wrapper {
    aspect-ratio: 16 / 9;
  }

  .tags ul {
    display: flex;
    padding: 0;
    margin: 0 -var(--space-xs);
  }

  .tags li {
    list-style: none;
    margin: 0 var(--space-xs);
  }

  .tags a {
    background: var(--color-secondary-main);
    color: var(--color-secondary-contrastText);
    font-family: var(--font-family-heading);
    display: block;
    border-radius: var(--space-m);
    padding: 0 var(--space-m);
    text-decoration: none;
  }

  .tags a:hover {
    background: var(--color-primary-light);
    color: var(--color-black);
  }

  .next-prev-wrapper {
    display: flex;
  }

  .next-prev-wrapper svg {
    flex-shrink: 0;
    font-size: var(--font-size-4);
  }

  .next-prev-wrapper a {
    align-items: center;
    display: flex;
    text-decoration: none;
  }

  .next-prev-wrapper .next {
    flex-direction: row-reverse;
  }

  .next-prev-wrapper article {
    font-size: var(--font-size-1);
    margin: 0 var(--space-s);
    height: 100%;
  }

  .next-prev-wrapper .description {
    text-decoration: underline;
  }

  .next-prev-wrapper .title {
    font-size: var(--font-size--1);
  }

  @media screen and (max-width: 900px) {
    .next-prev-wrapper a {
      flex: 0 0 50%;
    }
  }

  @media screen and (min-width: 900.05px) {
    .next-prev-wrapper a {
      flex: 0 0 34%;
    }
  }
</style>
